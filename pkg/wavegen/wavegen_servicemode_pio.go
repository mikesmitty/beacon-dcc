// Code generated by pioasm; DO NOT EDIT.

//go:build rp
package wavegen
import (
	pio "github.com/tinygo-org/pio/rp2-pio"
)
// wavegenServiceMode

const wavegenServiceModeWrapTarget = 0
const wavegenServiceModeWrap = 24

var wavegenServiceModeInstructions = []uint16{
		//     .wrap_target
		0xe04f, //  0: set    y, 15                      
		0xfc01, //  1: set    pins, 1                [28]
		0xfb00, //  2: set    pins, 0                [27]
		0x0081, //  3: jmp    y--, 1                     
		0xe001, //  4: set    pins, 1                    
		0xe023, //  5: set    x, 3                       
		0xa0c1, //  6: mov    isr, x                     
		0x4078, //  7: in     null, 24                   
		0xa026, //  8: mov    x, isr                     
		0x8080, //  9: pull   noblock                    
		0x6048, // 10: out    y, 8                       
		0x0016, // 11: jmp    22                         
		0xa0c2, // 12: mov    isr, y                     
		0x0f10, // 13: jmp    16                     [15]
		0x6041, // 14: out    y, 1                       
		0x0092, // 15: jmp    y--, 18                    
		0xbc42, // 16: nop                           [28]
		0xfc00, // 17: set    pins, 0                [28]
		0xfc00, // 18: set    pins, 0                [28]
		0xf901, // 19: set    pins, 1                [25]
		0x004e, // 20: jmp    x--, 14                    
		0xa246, // 21: mov    y, isr                 [2] 
		0xe028, // 22: set    x, 8                       
		0x008c, // 23: jmp    y--, 12                    
		0xfb00, // 24: set    pins, 0                [27]
		//     .wrap
}
const wavegenServiceModeOrigin = -1
func wavegenServiceModeProgramDefaultConfig(offset uint8) pio.StateMachineConfig {
	cfg := pio.DefaultStateMachineConfig()
	cfg.SetWrap(offset+wavegenServiceModeWrapTarget, offset+wavegenServiceModeWrap)
	return cfg;
}

